version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: interview-prep-frontend:latest
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app/frontend
      - node_modules_frontend:/app/frontend/node_modules # Docker manages node_modules inside the container
    working_dir: /app/frontend
    command: npm run start
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: interview-prep-backend:latest
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./backend:/app/backend
      # - node_modules_backend:/app/backend/node_modules # Docker manages node_modules inside the container
    command: npm run dev
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist data even after container is removed

  flyway:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://db:5432/interviewprepdbinstance -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./migrations:/flyway/migrations
    depends_on:
      - db

  frontend-tests:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: interview-prep-frontend-tests:latest
    volumes:
      - ./frontend:/app/frontend
      - node_modules_frontend:/app/frontend/node_modules
    working_dir: /app/frontend
    command: npm run test -- --watch=false --browsers=ChromeHeadlessNoSandbox

  backend-tests:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://user:password@db:5432/testdb
    image: interview-prep-backend-tests:latest
    volumes:
      - ./backend:/app/backend
      # - node_modules_backend:/app/backend/node_modules
    working_dir: /app/backend
    command: sh -c "npx jest --clearCache && npm run test -- --verbose"
    # command: tail -f /dev/null

volumes:
  postgres-data:
  node_modules_frontend:
  # node_modules_backend:
