networks:
  devnetwork:

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: interview-prep-frontend:latest
    ports:
      - "4200:4200"
    working_dir: /app/frontend
    command: npm run start
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: interview-prep-backend:latest
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    command: npm run dev
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data # Persist data even after container is removed
    networks:
      - devnetwork

  db-test:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-test-data:/var/lib/postgresql/data # Persist data even after container is removed
    networks:
      - devnetwork

  flyway:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://db:5432/interviewprepdbinstance -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./migrations:/flyway/migrations
    depends_on:
      - db

  frontend-tests:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: interview-prep-frontend-tests:latest
    working_dir: /app/frontend
    command: npm run test -- --watch=false --browsers=ChromeHeadlessNoSandbox
    networks:
      - devnetwork

  backend-tests:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - NODE_ENV=test
      - DATABASE_URL=${DATABASE_URL}
    image: interview-prep-backend-tests:latest
    working_dir: /app/backend
    depends_on:
      - db-test
    command: sh -c "npx jest --clearCache && npm run test -- --verbose"
    # command: tail -f /dev/null
    networks:
      - devnetwork

volumes:
  postgres-dev-data:
  postgres-test-data:
