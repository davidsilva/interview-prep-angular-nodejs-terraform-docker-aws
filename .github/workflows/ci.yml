name: CI

on:
  push:
    branches:
      - main
      - development
      - stage
      - production
      - workflow-test-branch
  pull_request:
    branches:
      - main
      - development
      - stage
      - production
      - workflow-test-branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # env:
    #   DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
    #   PGPASSFILE: /home/runner/.pgpass

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load .env.test
        run: |
          echo "Loading environment variables from .env.test" &&
          cat .env.test | grep -v '^#' | while read line; do echo "$lie" >> $GITHUB_ENV; done

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'
      
      - name: Install dependencies
        run: npm install

      # - name: Create .pgpass file
      #   run: |
      #     echo "localhost:5432:postgres:postgres:postgres" > ~/.pgpass &&
      #     echo "localhost:5432:testdb:postgres:postgres:postgres" >> ~/.pgpass &&
      #     chmod 0600 ~/.pgpass

      # - name: Create test database
      #   run: |
      #     sudo apt-get install -y postgresql-client && 
      #     psql -h localhost -U postgres -c "CREATE DATABASE testdb;"

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec postgres pg_isready -U $POSTGRES_USER; do echo "Waiting for PostgreSQL to be ready..."; sleep 2; done

      - name: Install dependencies for backend
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

